{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\the folder\\\\stash\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport { dateFormat } from \"../../utils/dateFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const data = {\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: \"Income\",\n      data: [...incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      })],\n      backgroundColor: \"green\",\n      tension: 0.2\n    }, {\n      label: \"Expenses\",\n      data: [...expenses.map(expense => {\n        const {\n          amount\n        } = expense;\n        return amount;\n      })],\n      backgroundColor: \"red\",\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #fcf6f9;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 50px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","register","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","tension","expense","ChartStyled","div"],"sources":["C:/Users/akash/Desktop/the folder/stash/expense-tracker_fullstack/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from \"react\";\r\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport { useGlobalContext } from \"../../context/globalContext\";\r\nimport { dateFormat } from \"../../utils/dateFormat\";\r\n\r\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\r\n\r\nfunction Chart() {\r\n    const { incomes, expenses } = useGlobalContext();\r\n\r\n    const data = {\r\n        labels: incomes.map((inc) => {\r\n            const { date } = inc;\r\n            return dateFormat(date);\r\n        }),\r\n        datasets: [\r\n            {\r\n                label: \"Income\",\r\n                data: [\r\n                    ...incomes.map((income) => {\r\n                        const { amount } = income;\r\n                        return amount;\r\n                    }),\r\n                ],\r\n                backgroundColor: \"green\",\r\n                tension: 0.2,\r\n            },\r\n            {\r\n                label: \"Expenses\",\r\n                data: [\r\n                    ...expenses.map((expense) => {\r\n                        const { amount } = expense;\r\n                        return amount;\r\n                    }),\r\n                ],\r\n                backgroundColor: \"red\",\r\n                tension: 0.2,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <ChartStyled>\r\n            <Line data={data} />\r\n        </ChartStyled>\r\n    );\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    background: #fcf6f9;\r\n    border: 2px solid #ffffff;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 50px;\r\n    height: 100%;\r\n`;\r\n\r\nexport default Chart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,QAAQ,UAAU;AAEtI,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpDZ,OAAO,CAACa,QAAQ,CAACZ,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,CAAC;AAE3G,SAAST,KAAK,GAAG;EAAA;EACb,MAAM;IAAEe,OAAO;IAAEC;EAAS,CAAC,GAAGJ,gBAAgB,EAAE;EAEhD,MAAMK,IAAI,GAAG;IACTC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAK;MACzB,MAAM;QAAEC;MAAK,CAAC,GAAGD,GAAG;MACpB,OAAOP,UAAU,CAACQ,IAAI,CAAC;IAC3B,CAAC,CAAC;IACFC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAE,CACF,GAAGF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QACvB,MAAM;UAAEC;QAAO,CAAC,GAAGD,MAAM;QACzB,OAAOC,MAAM;MACjB,CAAC,CAAC,CACL;MACDC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE;IACb,CAAC,EACD;MACIJ,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAE,CACF,GAAGD,QAAQ,CAACG,GAAG,CAAES,OAAO,IAAK;QACzB,MAAM;UAAEH;QAAO,CAAC,GAAGG,OAAO;QAC1B,OAAOH,MAAM;MACjB,CAAC,CAAC,CACL;MACDC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBACI,QAAC,WAAW;IAAA,uBACR,QAAC,IAAI;MAAC,IAAI,EAAEV;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB;AAAC,GAvCQjB,KAAK;EAAA,QACoBY,gBAAgB;AAAA;AAAA,KADzCZ,KAAK;AAyCd,MAAM6B,WAAW,GAAGlB,MAAM,CAACmB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAe7B,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}